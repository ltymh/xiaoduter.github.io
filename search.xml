<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[随笔感想]]></title>
    <url>%2F2018%2F02%2F02%2F%E9%9A%8F%E7%AC%94%E6%84%9F%E6%83%B3%2F</url>
    <content type="text"><![CDATA[初闻不识曲中意，再听已是曲中人。]]></content>
  </entry>
  <entry>
    <title><![CDATA[python进阶]]></title>
    <url>%2F2018%2F02%2F01%2Fpython%E8%BF%9B%E9%98%B6%2F</url>
    <content type="text"><![CDATA[做好我的博客，进行了许多美化之后，又想到还打算要学的Python，Java，网络安全等许多知识还没有深入学习。终于体会到了学无止境这个词的含义。不说了，开始学习Python吧！之前看过Python的一本书，了解了Python的许多基本语法，写了一个简单的爬虫，但是好久不用，许多地方已经忘了。现在就在重拾的基础上进阶吧！ 开始学习吧 学习Python就必须用到IDE，下载Python自带的shell编写很不方便，自带的IDE又不太想用，正好看到推荐里面可以用VIM编写，再加上之前一直想学习vim来着就把vim用法又看了一下。在我之前的博客里写到了如何使用vim部分操作，感兴趣的可以看一下。找了三个教程分别是CSDN，廖雪峰和菜鸟教程。 先介绍一下基本点的东西 python基础 占位符形式，print(“hello %s, %s” %(‘world’,’yanwen’))。 format()方法，print(“hello {0},{1:.1f}”.format(‘world’,17.25))//.1f是一不是L，表示小数点后几位。 list[列表]和tuple(元组)，列表追加用append()函数，元组和列表的区别是一旦初始化就不能修改。（但是如果元组里面有元素是列表的话，列表里面的内容可变，通过类似二维数组访问的方式。访问元组和列表都用string[]）。 条件判断缩进要一致，不用括号，用相同的缩进，例if num&gt;0: 换行缩进内容。 循环 for x in list。list(range(5))生成0到5的序列然后转化为列表。 dict字典d{‘string’:number,’string2’:number2}，查询用[]。增加用d[‘string’]=number。删除用d.pop[‘string’]。 set相当于没有重复值的list。s=set([1,2,3])。增加通过add()函数，删除通过remove()函数 对于不变对象来说，调用对象自身的任意方法，也不会改变该对象自身的内容。相反，这些方法会创建新的对象并返回，这样，就保证了不可变对象本身永远是不可变的（字符串就是一种不变对象）。12345 &gt;&gt;&gt; a = &apos;abc&apos;&gt;&gt;&gt; a.replace(&apos;a&apos;, &apos;A&apos;)&apos;Abc&apos;&gt;&gt;&gt; a&apos;abc&apos; 函数 def name(): 换行缩进内容。 默认参数：定义默认参数要牢记一点：默认参数必须指向不变对象！ 可变参数：一是参数作为一个list或者tuple传进来，二是在参数名字前面加上*号，表示参数个数可变。在已经有一个list存在的情况下，在list名字前加*号，就可以把list或者tuple的元素变成可变参数传进去。 关键字参数和命名关键字参数，在这里不详细介绍。 递归函数：1234def fact(n):if n==1: return 1return n * fact(n - 1) 高级特性 切片 列表里面L[:3]表示L[0],L[1],L[2]三个元素，L[2:3]表示L[2],一个元素。 或者倒着取，为L[-2:]，L[-2,-1]。 L[:10:2],表示前十个数，每两个取一次。（0,1,,2……9）就取（0,2,4,6,8） L[:]表示复制一个L。tuple同样可以切片操作。 迭代，python里面好多对象都可以用到for in来进行迭代。 列表生成式 [x * x for x in range(1, 11)][1, 4, 9, 16, 25, 36, 49, 64, 81, 100] [x * x for x in range(1, 11) if x % 2 == 0][4, 16, 36, 64, 100] 还可以使用两层循环，可以生成全排列：[m + n for m in ‘ABC’ for n in ‘XYZ’][‘AX’, ‘AY’, ‘AZ’, ‘BX’, ‘BY’, ‘BZ’, ‘CX’, ‘CY’, ‘CZ’] 生成器，从生成式变化得来。生成式：L=[x*x for x in range(10)]生成器：L=(x*x for x in range(10))通过next(L)打印出来，实际并不这样用，因为这样很繁琐，一般用循环迭代。]]></content>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[markdown]]></title>
    <url>%2F2018%2F02%2F01%2Fmarkdown%2F</url>
    <content type="text"><![CDATA[markdown部分讲解：有关markdown的部分知识。 参考网址 =是最高级标题 -是二级标题 他们都放在标题下面，像下划线那样，但是另起一行。 尖括号内br是换行，或者连敲两个以上空格然后回车 有序序列 1.空格接内容 111 222 无序序列 *空格接内容 111 222 可以序列表格嵌套]]></content>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux相关知识]]></title>
    <url>%2F2018%2F01%2F31%2FLinux%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86%2F</url>
    <content type="text"><![CDATA[在vim下搜索内容步骤： 命令模式下使用/user就可以匹配文档中user这个单词n调到下一个，N跳到上一个？user表示从末尾到开始搜索 1vim教程下载VIM有模式：Esc到Normal；Normal下i到编辑；Normal下:到命令行。normal模式下: 使用h j k l表示左下上右。x删除当前字符，dd删除当前行，u撤销最近的一次操作，ctrl+r恢复最近一次操作。ZZ保存文件并退出。o相当于i+回车(插入并到下一行)，O是上面a和i的区别在于，a是在光标右边插入，i是在左边，A是当前行末尾插入I在当前行的开始处添加文本(非空字符的行首)R是替换(覆盖)当前光标位置及后面的若干文本J是合并光标所在行及下一行为一行(依然在命令模式)&amp;是移动到行位y复制，p粘贴 2命令模式下 :help 是获取帮助， :help subject 是获取某一条指令的帮助。遇到重复操作时，可以录制一段键盘宏：q命令假设我们的文件中有如下几行。1234stdio.h fcntl.h unistd.h stdlib.h 我们希望将其编辑为： 12345678include “stdio.h” include ”fcntl.h” include ”unistd.h” include ”stdlib.h”``` 首先将光标移动到第一行的开始。 然后输入如下的命令： qa ^ i#include “ $ a” j q ```这样就录好了一段宏，宏名为a。之后执行3次这个宏：3@a]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[写在最前面]]></title>
    <url>%2F2018%2F01%2F31%2Ffirst%2F</url>
    <content type="text"><![CDATA[这是我的第一个博客的第一篇，这篇博客会一直置顶，讲解一些泛泛的东西，可能不是很细，但是应该会比较全面的介绍整个博客的大概。 写这个博客主要有两个方面的作用，其中最主要的是作为技术类的分享，分享平时学习中遇到的一些问题或者新发现。第二便是发表一些自己对于某件事的看法（发发牢骚啊啥的，嘿嘿）。点击网页任何地方会有红心出现哦。 this is my first blog 这个博客是通过hexo+github搭建的，github作为服务器,hexo自动生成网页框架。置顶的链接在这里this is baidu博客编辑是用hexo-admin在线编辑，使用markdown语法今天解决了hexo d报错的问题 是在hexo-admin添加密码之后报错，然后在知乎上网址查看主要的界面优化使用了这个网址里面的内容。主题的美化还有这里有详细的讲解（部分）添加标签界面网址在这里还有一些比较重要的网址，但是没有贴在这里，等之后有时间再贴上来。评论系统使用来必力，网上教程很多在这里不再赘述。更改背景 首先找到一个背景图片放到 hexo（hexo工程文件）-&gt; themes -&gt; next -&gt; source -&gt; images 的路径下； hexo（hexo工程文件）-&gt; themes -&gt; next -&gt; source -&gt; css -&gt; _custom ，找到路径下的custom.styl文件，在文件的最上方加上一代码 body { background:url(/images/backGround.jpg（这是你之前加的背景图片的名字）);} 就完事了。 无法部署到github上的问题：修改在.deploy_git.git下的config下remote的配置。之后修改_config.lym的配置（把https改成ssh）。网址 1下面图片以qq空间相册作为图床 1下面图片以七牛云作为图床 END]]></content>
      <tags>
        <tag>概述</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F01%2F28%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
